"""
This type stub file was generated by pyright.
"""

class DepthCache(object):
    def __init__(self, symbol) -> None:
        """Initialise the DepthCache

        :param symbol: Symbol to create depth cache for
        :type symbol: string

        """
        ...
    
    def add_bid(self, bid):
        """Add a bid to the cache

        :param bid:
        :return:

        """
        ...
    
    def add_ask(self, ask):
        """Add an ask to the cache

        :param ask:
        :return:

        """
        ...
    
    def get_bids(self):
        """Get the current bids

        :return: list of bids with price and quantity as floats

        .. code-block:: python

            [
                [
                    0.0001946,  # Price
                    45.0        # Quantity
                ],
                [
                    0.00019459,
                    2384.0
                ],
                [
                    0.00019158,
                    5219.0
                ],
                [
                    0.00019157,
                    1180.0
                ],
                [
                    0.00019082,
                    287.0
                ]
            ]

        """
        ...
    
    def get_asks(self):
        """Get the current asks

        :return: list of asks with price and quantity as floats

        .. code-block:: python

            [
                [
                    0.0001955,  # Price
                    57.0'       # Quantity
                ],
                [
                    0.00019699,
                    778.0
                ],
                [
                    0.000197,
                    64.0
                ],
                [
                    0.00019709,
                    1130.0
                ],
                [
                    0.0001971,
                    385.0
                ]
            ]

        """
        ...
    
    @staticmethod
    def sort_depth(vals, reverse=...):
        """Sort bids or asks by price
        """
        ...
    


class DepthCacheManager(object):
    _default_refresh = ...
    def __init__(self, client, symbol, callback=..., refresh_interval=..., bm=..., limit=..., ws_interval=...) -> None:
        """Initialise the DepthCacheManager

        :param client: Binance API client
        :type client: binance.Client
        :param symbol: Symbol to create depth cache for
        :type symbol: string
        :param callback: Optional function to receive depth cache updates
        :type callback: function
        :param refresh_interval: Optional number of seconds between cache refresh, use 0 or None to disable
        :type refresh_interval: int
        :param limit: Optional number of orders to get from orderbook
        :type limit: int
        :param ws_interval: Optional interval for updates on websocket, default None. If not set, updates happen every second. Must be 0, None (1s) or 100 (100ms).
        :type ws_interval: int

        """
        ...
    
    def get_depth_cache(self):
        """Get the current depth cache

        :return: DepthCache object

        """
        ...
    
    def close(self, close_socket=...):
        """Close the open socket for this manager

        :return:
        """
        ...
    
    def get_symbol(self):
        """Get the symbol
        
        :return: symbol
        """
        ...
    


